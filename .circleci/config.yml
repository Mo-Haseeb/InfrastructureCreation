version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project


commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
             
jobs:
  build:  # Choose any name, such as `build`
      # The primary container, where your job's commands will run
      docker:
        - image: cimg/base:2021.04
      steps:
        - checkout # check out the code in the project directory
        - run: echo "hello world" # run the `echo` command
        - run: pwd
        - run: ls -larth
        
# Exercise - Rollback
  create_infrastructure: 
      docker:
       - image: amazon/aws-cli
      steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
              aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1


    # Exercise: Config and Deployment
  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["35:25:a4:1d:98:5e:04:bb:b0:ee:2e:d7:e9:52:11:75"] 
      - run:
          name: Install Ansible
          command: |
              apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
              ansible-playbook -i inventory.txt main.yml


                # Exercise: Smoke Testing
  smoke_test:
    docker:
    - image: alpine:latest
    steps:
    - run:
        name: Test job
        # Fail the job intentionally to simulate an error.
        command:  return 1
    - destroy_environment  
            
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - build
      - create_infrastructure
      - smoke_test
